// Code generated by protoc-gen-go.
// source: grpclog/grpclog.proto
// DO NOT EDIT!

/*
Package grpclog is a generated protocol buffer package.

It is generated from these files:
	grpclog/grpclog.proto

It has these top-level messages:
	Call
	Input
	Output
	Error
*/
package grpcinstrument

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "go.pedge.io/google-protobuf"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Call struct {
	Service  string                    `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	Method   string                    `protobuf:"bytes,2,opt,name=method" json:"method,omitempty"`
	Input    *Input                    `protobuf:"bytes,3,opt,name=input" json:"input,omitempty"`
	Output   *Output                   `protobuf:"bytes,4,opt,name=output" json:"output,omitempty"`
	Error    *Error                    `protobuf:"bytes,5,opt,name=error" json:"error,omitempty"`
	Duration *google_protobuf.Duration `protobuf:"bytes,6,opt,name=duration" json:"duration,omitempty"`
}

func (m *Call) Reset()                    { *m = Call{} }
func (m *Call) String() string            { return proto.CompactTextString(m) }
func (*Call) ProtoMessage()               {}
func (*Call) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Call) GetInput() *Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Call) GetOutput() *Output {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *Call) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Call) GetDuration() *google_protobuf.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

type Input struct {
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
}

func (m *Input) Reset()                    { *m = Input{} }
func (m *Input) String() string            { return proto.CompactTextString(m) }
func (*Input) ProtoMessage()               {}
func (*Input) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Output struct {
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
}

func (m *Output) Reset()                    { *m = Output{} }
func (m *Output) String() string            { return proto.CompactTextString(m) }
func (*Output) ProtoMessage()               {}
func (*Output) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Error struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*Call)(nil), "grpclog.Call")
	proto.RegisterType((*Input)(nil), "grpclog.Input")
	proto.RegisterType((*Output)(nil), "grpclog.Output")
	proto.RegisterType((*Error)(nil), "grpclog.Error")
}

var fileDescriptor0 = []byte{
	// 225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x8f, 0xdb, 0x4a, 0xc4, 0x30,
	0x18, 0x84, 0xa9, 0x36, 0x59, 0xfd, 0x95, 0x5d, 0x08, 0xac, 0x44, 0xc1, 0x03, 0xbd, 0x12, 0x84,
	0x14, 0xf4, 0x11, 0xd4, 0x0b, 0xaf, 0x7c, 0x86, 0x1e, 0x62, 0x2c, 0xa4, 0xfd, 0x43, 0x9a, 0x08,
	0x3e, 0x97, 0x2f, 0x68, 0x73, 0xa8, 0xe0, 0x5e, 0x95, 0xf9, 0x66, 0xfe, 0xce, 0x04, 0xf6, 0xca,
	0x9a, 0x4e, 0xa3, 0xaa, 0xf3, 0x57, 0x18, 0x8b, 0x0e, 0xd9, 0x26, 0xcb, 0xab, 0x1b, 0x85, 0xa8,
	0xb4, 0xac, 0x23, 0x6e, 0xfd, 0x47, 0xdd, 0x7b, 0xdb, 0xb8, 0x01, 0xa7, 0x14, 0xac, 0x7e, 0x0a,
	0x28, 0x9f, 0x1b, 0xad, 0xd9, 0x0e, 0x36, 0xb3, 0xb4, 0x5f, 0x43, 0x27, 0x79, 0x71, 0x57, 0xdc,
	0x9f, 0xb2, 0x2d, 0xd0, 0x51, 0xba, 0x4f, 0xec, 0xf9, 0x51, 0xd4, 0xd7, 0x40, 0x86, 0xc9, 0x78,
	0xc7, 0x8f, 0x17, 0x79, 0xf6, 0xb8, 0x15, 0x6b, 0xe3, 0x5b, 0xa0, 0xec, 0x16, 0x28, 0x7a, 0x17,
	0xfc, 0x32, 0xfa, 0xbb, 0x3f, 0xff, 0x3d, 0xe2, 0x70, 0x2f, 0xad, 0x45, 0xcb, 0xc9, 0xc1, 0xfd,
	0x6b, 0xa0, 0xec, 0x01, 0x4e, 0xd6, 0x69, 0x9c, 0xc6, 0xc4, 0xa5, 0x48, 0xdb, 0xc5, 0xba, 0x5d,
	0xbc, 0xe4, 0x40, 0xb5, 0x07, 0x92, 0x5a, 0xcf, 0xa1, 0x74, 0xdf, 0x26, 0x4f, 0xae, 0x2e, 0x80,
	0xe6, 0xb2, 0xff, 0x9c, 0x03, 0x49, 0x25, 0xcb, 0x23, 0x47, 0x39, 0xcf, 0x8d, 0xca, 0x4e, 0x4b,
	0xe3, 0xbf, 0x9f, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0xaa, 0x3a, 0x39, 0x99, 0x47, 0x01, 0x00,
	0x00,
}
